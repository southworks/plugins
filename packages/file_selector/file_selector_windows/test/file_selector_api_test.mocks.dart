// Mocks generated by Mockito 5.3.2 from annotations
// in file_selector_windows/example/windows/flutter/ephemeral/.plugin_symlinks/file_selector_windows/test/file_selector_api_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:file_selector_platform_interface/file_selector_platform_interface.dart'
    as _i5;
import 'package:file_selector_windows/src/file_selector_dart/dialog_mode.dart'
    as _i4;
import 'package:file_selector_windows/src/file_selector_dart/dialog_wrapper.dart'
    as _i2;
import 'package:file_selector_windows/src/file_selector_dart/dialog_wrapper_factory.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDialogWrapper_0 extends _i1.SmartFake implements _i2.DialogWrapper {
  _FakeDialogWrapper_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DialogWrapperFactory].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogWrapperFactory extends _i1.Mock
    implements _i3.DialogWrapperFactory {
  MockDialogWrapperFactory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DialogWrapper createInstance(_i4.DialogMode? dialogMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #createInstance,
          [dialogMode],
        ),
        returnValue: _FakeDialogWrapper_0(
          this,
          Invocation.method(
            #createInstance,
            [dialogMode],
          ),
        ),
      ) as _i2.DialogWrapper);
}

/// A class which mocks [DialogWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogWrapper extends _i1.Mock implements _i2.DialogWrapper {
  MockDialogWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get lastResult => (super.noSuchMethod(
        Invocation.getter(#lastResult),
        returnValue: 0,
      ) as int);
  @override
  void setFolder(String? path) => super.noSuchMethod(
        Invocation.method(
          #setFolder,
          [path],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setFileName(String? name) => super.noSuchMethod(
        Invocation.method(
          #setFileName,
          [name],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setOkButtonLabel(String? label) => super.noSuchMethod(
        Invocation.method(
          #setOkButtonLabel,
          [label],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addOptions(int? newOptions) => super.noSuchMethod(
        Invocation.method(
          #addOptions,
          [newOptions],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setFileTypeFilters(List<_i5.XTypeGroup>? filters) => super.noSuchMethod(
        Invocation.method(
          #setFileTypeFilters,
          [filters],
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<String?>? show(int? parentWindow) =>
      (super.noSuchMethod(Invocation.method(
        #show,
        [parentWindow],
      )) as List<String?>?);
}
